digraph dependencies {
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addBooleanOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addStringOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addLongOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addIntegerOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addDoubleOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addIntegerOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addBooleanOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addStringOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addDoubleOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMD.addLongOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$UnknownSuboptionException.getMessage()Ljava/lang/String;" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD$Option$BooleanOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMD.addBooleanOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$BooleanOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$BooleanOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$BooleanOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD$UnknownSuboptionException.getSuboption()C" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD.<init>()V" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD.<init>()V" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD.<init>()V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.<init>()V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.<init>()V" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD.<init>()V" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD.<init>()V" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD.addIntegerOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD.addIntegerOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD.addIntegerOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD.addIntegerOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD.addIntegerOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD$Option$LongOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$LongOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$LongOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD$Option$LongOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD$Option$LongOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMD.addLongOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.addDoubleOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addDoubleOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$UnknownOptionException.getOptionName()Ljava/lang/String;" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;Ljava/util/Locale;)V" -> "net.mooctest.CMD.parse([Ljava/lang/String;)V";
	"net.mooctest.CMD$Option.shortForm()Ljava/lang/String;" -> "net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD.getOptionValue(Lnet/mooctest/CMD$Option;)Ljava/lang/Object;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.addStringOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addStringOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$StringOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$StringOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMD.addStringOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$StringOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option.getValue(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/Object;" -> "net.mooctest.CMD.addValue(Lnet/mooctest/CMD$Option;Ljava/lang/String;Ljava/util/Locale;)V";
	"net.mooctest.CMD.addLongOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addLongOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$UnknownOptionException.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMD.parse([Ljava/lang/String;Ljava/util/Locale;)V";
	"net.mooctest.CMD$Option$BooleanOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMD.addBooleanOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$BooleanOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$BooleanOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.getRemainingArgs()[Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$DoubleOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$DoubleOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMD.addDoubleOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$DoubleOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$StringOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMD.addStringOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$StringOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$StringOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.addIntegerOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD.addIntegerOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD.addIntegerOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD.addIntegerOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD.addIntegerOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD.addStringOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addStringOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$LongOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$LongOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$StringOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$StringOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.addBooleanOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addBooleanOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.getOptionValue(Lnet/mooctest/CMD$Option;Ljava/lang/Object;)Ljava/lang/Object;" -> "net.mooctest.CMD.getOptionValues(Lnet/mooctest/CMD$Option;)Ljava/util/Collection;";
	"net.mooctest.CMD.getOptionValue(Lnet/mooctest/CMD$Option;Ljava/lang/Object;)Ljava/lang/Object;" -> "net.mooctest.CMD.getOptionValue(Lnet/mooctest/CMD$Option;)Ljava/lang/Object;";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMD.addIntegerOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD$UnknownSuboptionException.<init>(Ljava/lang/String;C)V" -> "net.mooctest.CMD.parse([Ljava/lang/String;Ljava/util/Locale;)V";
	"net.mooctest.CMD$Option.wantsValue()Z" -> "net.mooctest.CMD.parse([Ljava/lang/String;Ljava/util/Locale;)V";
	"net.mooctest.CMD.addLongOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addLongOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option.longForm()Ljava/lang/String;" -> "net.mooctest.CMD.getOptionValue(Lnet/mooctest/CMD$Option;Ljava/lang/Object;)Ljava/lang/Object;";
	"net.mooctest.CMD$Option.longForm()Ljava/lang/String;" -> "net.mooctest.CMD.addValue(Lnet/mooctest/CMD$Option;Ljava/lang/String;Ljava/util/Locale;)V";
	"net.mooctest.CMD$Option.longForm()Ljava/lang/String;" -> "net.mooctest.CMD.addOption(Lnet/mooctest/CMD$Option;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$IntegerOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD$Option$IntegerOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD$Option$IntegerOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD$Option$IntegerOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD$Option$IntegerOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD$UnknownOptionException.getMessage()Ljava/lang/String;" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD.addBooleanOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addBooleanOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;)V" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;)V" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;)V" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD.parse([Ljava/lang/String;)V" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMD.addIntegerOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD$Option$IntegerOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD$Option$BooleanOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$BooleanOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$DoubleOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$DoubleOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.addValue(Lnet/mooctest/CMD$Option;Ljava/lang/String;Ljava/util/Locale;)V" -> "net.mooctest.CMD.parse([Ljava/lang/String;Ljava/util/Locale;)V";
	"net.mooctest.CMD$OptionException.printStackTrace()V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$NotFlagException.<init>(Ljava/lang/String;C)V" -> "net.mooctest.CMD.parse([Ljava/lang/String;Ljava/util/Locale;)V";
	"net.mooctest.CMD$Option$StringOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$StringOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$DoubleOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMD.addDoubleOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$DoubleOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$DoubleOption.<init>(CLjava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$LongOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMD.addLongOption(Ljava/lang/String;)Lnet/mooctest/CMD$Option;";
	"net.mooctest.CMD$Option$LongOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$LongOption.<init>(Ljava/lang/String;)V" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$IntegerOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD$Option$IntegerOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test2()V";
	"net.mooctest.CMD$Option$IntegerOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest2.test6()V";
	"net.mooctest.CMD$Option$IntegerOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD$Option$IntegerOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD$Option$DoubleOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$DoubleOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$OptionException.getMessage()Ljava/lang/String;" -> "net.mooctest.CMDTest1.test4()V";
	"net.mooctest.CMD$OptionException.getMessage()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$OptionException.getMessage()Ljava/lang/String;" -> "net.mooctest.CMDTest2.test5()V";
	"net.mooctest.CMD$OptionException.getMessage()Ljava/lang/String;" -> "net.mooctest.CMDTest1.test3()V";
	"net.mooctest.CMD$Option$BooleanOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$BooleanOption.shortForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD$Option$LongOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD$Option$LongOption.longForm()Ljava/lang/String;" -> "net.mooctest.CMDTest.test()V";
	"net.mooctest.CMD.addDoubleOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest3.testnnull()V";
	"net.mooctest.CMD.addDoubleOption(CLjava/lang/String;)Lnet/mooctest/CMD$Option;" -> "net.mooctest.CMDTest.test()V";
}